affinity: {}
annotations: {}
arbiter:
  affinity: {}
  annotations: {}
  configuration: ""
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  enabled: true
  extraEnvVars: []
  extraFlags: []
  extraVolumeMounts: []
  extraVolumes: []
  initContainers: {}
  labels: {}
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nodeSelector: {}
  pdb:
    create: false
    minAvailable: 1
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    sysctls: {}
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  resources:
    limits: {}
    requests: {}
  sidecars: {}
  tolerations: []
architecture: standalone
auth:
  enabled: true
  rootPassword: ""
clusterDomain: dev.gantry
common:
  exampleValue: common-chart
  global: {}
configuration: ""
containerSecurityContext:
  enabled: true
  runAsUser: 1001
customLivenessProbe: {}
customReadinessProbe: {}
directoryPerDB: false
disableSystemLog: false
enableIPv6: false
externalAccess:
  autoDiscovery:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/kubectl
      tag: 1.18.6-debian-10-r5
    resources:
      limits: {}
      requests: {}
  enabled: false
  service:
    annotations: {}
    loadBalancerIPs: []
    loadBalancerSourceRanges: []
    nodePorts: []
    port: 27017
    type: LoadBalancer
extraEnvVars: []
extraFlags: []
extraVolumeMounts: []
extraVolumes: []
image:
  debug: false
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/mongodb
  tag: 4.2.8-debian-10-r39
initContainers: {}
initdbScripts: {}
labels: {}
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  enabled: false
  extraFlags: ""
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.11.0-debian-10-r88
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 15
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  prometheusRule:
    additionalLabels: {}
    enabled: false
    rules: {}
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  resources:
    limits: {}
    requests: {}
  service:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: '{{ .Values.metrics.service.port }}'
      prometheus.io/scrape: "true"
    port: 9216
    type: ClusterIP
  serviceMonitor:
    additionalLabels: {}
    enabled: false
    interval: 30s
nodeSelector: {}
pdb:
  create: false
  minAvailable: 1
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: true
  mountPath: /bitnami/mongodb
  size: 8Gi
  subPath: ""
podAnnotations: {}
podLabels: {}
podManagementPolicy: OrderedReady
podSecurityContext:
  enabled: true
  fsGroup: 1001
  sysctls: {}
rbac:
  create: false
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
replicaCount: 2
replicaSetHostnames: true
replicaSetName: rs0
resources:
  limits: {}
  requests: {}
service:
  annotations: {}
  externalIPs: []
  loadBalancerSourceRanges: []
  nodePort: ""
  port: 27017
  portName: mongodb
  type: ClusterIP
serviceAccount:
  create: true
sidecars: {}
strategyType: RollingUpdate
systemLogVerbosity: 0
tolerations: []
useStatefulSet: false
volumePermissions:
  enabled: false
  image:
    pullPolicy: Always
    pullSecrets: []
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
  resources:
    limits: {}
    requests: {}

